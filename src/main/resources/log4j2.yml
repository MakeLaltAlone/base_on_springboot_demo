Configuration:
  status: DEBUG

  Properties: #定义全局变量
    Property:
      - name: log.path
        value: /ytf_logs/base_on_springboot_demo/debug
      - name: log.error.path
        value: /ytf_logs/base_on_springboot_demo/error
  Appenders:
    Console: #输出到控制台
      name: CONSOLE
      encoding: UTF-8
      target: SYSTEM_OUT
      PatternLayout:
        Pattern: "%-d{yyyy-MM-dd HH:mm:ss} - [%t] [%p] [%C{1}:%L %M] %m%n"
      ThresholdFilter:
        level: debug
        onMatch: ACCEPT
        onMismatch: DENY
    RollingFile: #输出到文件
      - name: ROLLING_FILE
        fileName: "${log.path}/base_on_springboot_demo.log"
        filePattern: "${log.path}/base_on_springboot_demo_%d{yyyy-MM-dd-HH}.log"
        PatternLayout:
          Pattern: "%-d{yyyy-MM-dd HH:mm:ss} - [%t] [%p] [%C{1}:%L %M] %msg%n"
        Policies:
          TimeBasedTriggeringPolicy:
#          TimeBasedTriggeringPolicy  这个配置需要和filePattern结合使用，注意filePattern中配置的文件重命名规则是${log_path}/zcrTest%d{yyyy-MM-dd}.log，最小的时间粒度是dd，即分钟，TimeBasedTriggeringPolicy指定的size是1，结合起来就是每一天生成一个新文件。如果改成%d{yyyy-MM-dd HH}，最小粒度为小时，则每一个小时生成一个文件。
            size: 1
            interval: 1
            modulate: true
        ThresholdFilter:
          level: debug
          onMatch: ACCEPT
          onMismatch: DENY

      - name: ROLLING_FILE_ERROR
        fileName: "${log.error.path}/base_on_springboot_demo_error.log"
        filePattern: "${log.error.path}/base_on_springboot_demo_errpr_%d{yyyy-MM-dd-HH}.log"
        PatternLayout:
          Pattern: "%-d{yyyy-MM-dd HH:mm:ss} - [%t] [%p] [%C{1}:%L %M] %msg%n"
        Policies:
          TimeBasedTriggeringPolicy:
#          TimeBasedTriggeringPolicy  这个配置需要和filePattern结合使用，注意filePattern中配置的文件重命名规则是${log_path}/zcrTest%d{yyyy-MM-dd}.log，最小的时间粒度是dd，即分钟，TimeBasedTriggeringPolicy指定的size是1，结合起来就是每一天生成一个新文件。如果改成%d{yyyy-MM-dd HH}，最小粒度为小时，则每一个小时生成一个文件。
            size: 1
            interval: 1
            modulate: true
        ThresholdFilter:
          level: error
          onMatch: ACCEPT
          onMismatch: DENY
#    SMTP:
#      name: Mail
#      subject: Error Log
#      to: 104945xxxx@qq.com
#      from: 840xxxxx@qq.com
#      smtpProtocol: smtp
#      smtpHost: smtp.qq.com
#      smtpPort: 587
#      smtpDebug: false
#      smtpUsername: 84097xxxx@qq.com
#      smtpPassword: ioduagvzahoobdib
#    Async:
#      name: AsyncError
#      AppenderRef:
#        ref: Mail
  Loggers:
    Logger:
#    <!--我们只让这个logger输出trace信息，其他的都是error级别-->
#    <!--additivity开启的话，由于这个logger也是满足root的，所以会被打印两遍。不过root logger 的level是error，为什么Bar 里面的trace信息也被打印两遍呢-->
      name: log.level.com.jeiker.demo.mapper
      additivity: false
      level: debug
      AppenderRef:
        ref: CONSOLE
        ref: ROLLING_FILE
#        ref: Mail
#    AsyncLogger:
#      name: async
#      additivity: false
#      includeLocation: true
#      level: error
#      AppenderRef:
#        - ref: Mail
    Root:
      level: debug
      AppenderRef:
        - ref: CONSOLE
          level: debug
        - ref: ROLLING_FILE
          level: debug
        - ref: ROLLING_FILE_ERROR
          level: error
#        - ref: AsyncError
#          level: error